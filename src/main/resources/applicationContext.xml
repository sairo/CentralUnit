<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
   
    <context:property-placeholder location="classpath:cu.properties"/>
   
   	<context:annotation-config/>
    <context:component-scan base-package="pwr.tin.tip.sw.pd.cu"/>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="jobPoolManagerTrigger"/>
				<ref bean="pingTrigger"/>
			</list>
		</property>
	</bean>
	
	<bean id="jobPoolManagerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="jobPoolManager"/>
				<property name="targetMethod" value="checkIfQueueIsFull"/>
				<property name="concurrent" value="false"/>
			</bean>
		</property>
		<property name="startDelay" value="2000"/>
		<property name="repeatInterval" value="1000"/>
	</bean>
	
	<bean id="pingTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="unitService"/>
				<property name="targetMethod" value="ping"/>
				<property name="concurrent" value="false"/>
			</bean>
		</property>
		<property name="startDelay" value="10000"/>
		<property name="repeatInterval" value="10000"/>
	</bean>

  	<bean id="jmsConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
    	<constructor-arg>
    		<bean class="org.apache.activemq.ActiveMQConnectionFactory">
		    	<constructor-arg value="failover:(${esb.msg.broker.url})?maxReconnectDelay=15000"/>
		    </bean>
    	</constructor-arg>
    	<property name="sessionCacheSize" value="${jms.session.cache.size}"/>
    </bean>
    
    <bean id="esbMessageContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
		<property name="maxMessagesPerTask" value="#{${thread.pool.max.tasks} + ${thread.pool.queue.capacity}}"/>
    	<property name="destinationName" value="${esb.replay.queue}"/>
    	<property name="messageSelector" value="${msg.selector}"/>
    	<property name="messageListener">
    		<bean class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
    			<constructor-arg ref="esbMessageListener"/>
    			<property name="defaultListenerMethod" value="receive"/>
    			<property name="messageConverter"><null/></property>
    		</bean>
    	</property>
    </bean>
    
    <bean id="workflowMessageContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
		<property name="maxMessagesPerTask" value="#{${thread.pool.max.tasks} + ${thread.pool.queue.capacity}}"/>
    	<property name="destinationName" value="${cu.in.queue}"/>
    	<property name="messageSelector" value="${msg.selector}"/>
    	<property name="messageListener">
    		<bean class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
    			<constructor-arg ref="workflowMessageListener"/>
    			<property name="defaultListenerMethod" value="receive"/>
    			<property name="messageConverter"><null/></property>
    		</bean>
    	</property>
    </bean>
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    	<constructor-arg ref="jmsConnectionFactory"/>
    </bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${thread.pool.core.tasks}"/>
		<property name="maxPoolSize" value="${thread.pool.max.tasks}"/>
		<property name="queueCapacity" value="${thread.pool.queue.capacity}"/>
	</bean>
	
	<bean id="messages" class="pwr.tin.tip.sw.pd.cu.core.Messages">
		<property name="messageSource">
			<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
				<property name="basenames">
					<list>
						<value>message</value>
					</list>
				</property>
				 <property name="defaultEncoding" value="UTF-8"/>
			</bean>
		</property>
	</bean>
	
	<bean id="jaxb2marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound" value="pwr.tin.tip.sw.pd.cu.jms.model.Job,
												 pwr.tin.tip.sw.pd.cu.jms.model.JobTask,
												 pwr.tin.tip.sw.pd.cu.jms.model.JobResponse,
												 pwr.tin.tip.sw.pd.cu.jms.model.JobTaskResponse"/>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://winw.corp.tepenet:5432/pd"/>
        <!-- <property name="url" value="jdbc:postgresql:pd"/> -->
        <property name="username" value="cu"/>
        <property name="password" value="cu_passwd"/>
        <property name="defaultReadOnly" value="false"/>
        <property name="maxActive" value="4"/>
        <property name="maxOpenPreparedStatements" value="1"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
          <list>
            <value>pwr.tin.tip.sw.pd.cu.db.model.DBJob</value>
            <value>pwr.tin.tip.sw.pd.cu.db.model.DBJobTask</value>
            <value>pwr.tin.tip.sw.pd.cu.db.model.DBUnit</value>
          </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>
</beans>